
Files already downloaded and verified
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39910888671875
avg_accuracy: 0.0
Global batch 0, avg loss after 100 batches: 3.164  | Global batch 0, avg accuracy after 100 batches: 0.0
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3988952636719
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.40130615234375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.40069580078125
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4010314941406
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3990173339844
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.4001159667969
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.399658203125
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3996887207031
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.39898681640625
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4000549316406
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39996337890625
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4012451171875
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.402099609375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3997802734375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39892578125
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4009704589844
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.4016418457031
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3997497558594
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39947509765625
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3997802734375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.40045166015625
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4010314941406
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39971923828125
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39910888671875
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.4001770019531
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4007263183594
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.399169921875
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.4007568359375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.3995666503906
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.3990478515625
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: True
loss: 316.4001159667969
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.40008544921875
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39886474609375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.398681640625
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Preds shape: torch.Size([16, 9, 1623])
Target one hot shape: torch.Size([16, 9, 1623])
Target one hot symmetric: False
loss: 316.39935302734375
Examples shape: torch.Size([16, 9, 105, 105, 1]), Labels shape: torch.Size([16, 9]), Target shape: torch.Size([16, 17])
x.shape: torch.Size([16, 9, 1, 105, 105])
Traceback (most recent call last):
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/./experiment_resnet.py", line 71, in <module>
    experiment_base(dataset)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/./experiment_resnet.py", line 61, in experiment_base
    trainer.train()
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/train_resnet.py", line 95, in train
    preds = self.model(torch.permute(examples, (0, 1, 4, 2, 3)))
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet_with_projection.py", line 25, in forward
    return torch.stack([self.sequence_pass(x[i]) for i in range(batch_size)])
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet_with_projection.py", line 25, in <listcomp>
    return torch.stack([self.sequence_pass(x[i]) for i in range(batch_size)])
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet_with_projection.py", line 16, in sequence_pass
    x = super(ProjectionResNet, self).forward(x)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet.py", line 66, in forward
    z = self.layer4(z)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torchvision/models/resnet.py", line 92, in forward
    out = self.conv1(x)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 457, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 453, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/traceback.py", line 197, in format_stack
    return format_list(extract_stack(f, limit=limit))
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/traceback.py", line 211, in extract_stack
    stack = StackSummary.extract(walk_stack(f), limit=limit)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/traceback.py", line 362, in extract
    linecache.checkcache(filename)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/linecache.py", line 72, in checkcache
    stat = os.stat(fullname)
KeyboardInterrupt
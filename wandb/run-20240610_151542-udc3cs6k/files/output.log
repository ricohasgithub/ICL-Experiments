
Files already downloaded and verified
predicted labels: tensor([ 622, 1310,  622,  622,  622,  622,  622,  622,  622])
target labels: tensor([434,  62,  40, 434, 434, 721,  40,  40, 434])
avg_accuracy: 0.0
Global batch 0, avg loss after 100 batches: 3.164  | Global batch 0, avg accuracy after 100 batches: 0.0
predicted labels: tensor([ 622, 1310,  673,  622,  622,  622, 1208, 1310,  622])
target labels: tensor([664, 240, 190, 690, 781, 931, 294, 852, 541])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([621, 545, 621, 545, 783, 545, 472, 621, 621])
predicted labels: tensor([1208,  622,  622,  622, 1245, 1245,  622, 1245,  622])
target labels: tensor([304, 781, 781, 781, 704, 704, 781, 704, 781])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([700, 700, 113,  86, 764,  86,  86, 700, 700])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([149, 536, 536, 536, 109, 310, 310, 310, 310])
predicted labels: tensor([602, 622, 622, 602, 622, 673, 602, 622, 602])
target labels: tensor([782, 699, 699, 782, 699, 504, 782, 864, 782])
predicted labels: tensor([ 622,  622, 1310,  622,  622,  622,  622,  622,  622])
target labels: tensor([523, 521, 616, 521, 521, 129, 129, 129, 521])
predicted labels: tensor([622, 673, 622, 673, 622, 622, 673, 622, 673])
target labels: tensor([ 60, 427,  60, 427,  60, 803, 427, 299, 427])
predicted labels: tensor([1208, 1208,  622,  622,  622, 1208,  622,  622, 1208])
target labels: tensor([872, 872, 123, 237, 123, 872,  91, 123, 872])
predicted labels: tensor([ 622,  622, 1208,  622, 1208, 1208,  622,  622,  622])
target labels: tensor([  5, 711, 799, 214, 799, 799, 214, 214, 214])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([458, 623, 944, 623, 623, 944, 944,  63, 944])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([631,   2,   1, 631,   1,   1, 631, 764, 631])
predicted labels: tensor([ 622,  622,  409,  622,  622, 1208, 1208, 1208, 1208])
target labels: tensor([459, 893, 638, 459, 459, 679, 679, 679, 679])
predicted labels: tensor([ 622, 1310, 1245,  622,  622, 1310,  622, 1310, 1310])
target labels: tensor([ 87, 378, 894, 836, 836, 378, 836, 378, 378])
predicted labels: tensor([1310,  622,  622,  622,  622,  622,  622,  622,  622])
target labels: tensor([397, 235, 310, 943, 943, 943, 235, 235, 235])
predicted labels: tensor([ 622, 1208,  622,  622, 1310, 1310, 1310,  279,  622])
target labels: tensor([643, 423, 643, 643, 962, 962, 962,  18, 643])
predicted labels: tensor([1310, 1310,  622, 1310,  622,  622,  622,  622, 1310])
target labels: tensor([344, 344, 869, 344, 869, 179, 869, 797, 344])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([192, 875, 192, 192, 875, 875, 939, 519, 192])
predicted labels: tensor([622, 622, 602, 622, 602, 622, 622, 602, 602])
target labels: tensor([771,  76, 832,  76, 832,  76, 738, 832, 832])
predicted labels: tensor([ 622, 1208,  622,  622, 1208, 1208,  622,  673,  622])
target labels: tensor([ 97, 852, 305,  97, 852, 852,  97, 511,  97])
predicted labels: tensor([ 622,  622,  622,  622, 1310,  622,  673,  602,  622])
target labels: tensor([458, 902, 668, 695, 336, 491, 245,  42, 189])
predicted labels: tensor([622, 673, 673, 673, 622, 622, 622, 622, 673])
target labels: tensor([917, 596, 596, 596, 882, 917, 917, 619, 596])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([470, 889, 470, 196, 196, 470, 199, 196, 470])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([221, 284, 284, 284, 674, 218, 221, 221, 284])
predicted labels: tensor([ 622,  622, 1310,  622,  622,  622,  622,  622,  622])
target labels: tensor([803, 803, 866,  88, 621, 621, 621, 803, 621])
predicted labels: tensor([ 622, 1310,  622,  622,  622,  622,  279,  622,  622])
target labels: tensor([375, 316, 220, 375, 220, 375,  25, 220, 220])
predicted labels: tensor([1208,  622, 1208,  622,  622,  622,  622, 1208,  622])
target labels: tensor([360, 647, 360, 429, 603, 647, 647, 360, 647])
predicted labels: tensor([ 622,  622, 1208,  622, 1208, 1208,  622, 1245, 1208])
target labels: tensor([140, 262, 555, 262, 555, 555, 262, 147, 555])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([133, 963, 914, 914, 914, 656, 656, 656, 656])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 673, 622])
target labels: tensor([417, 795, 417,   1, 795, 417, 795, 152, 795])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([161, 893, 575, 161, 161, 893, 179, 893, 893])
predicted labels: tensor([ 622,  622, 1310,  622, 1310, 1310,  622,  622,  622])
target labels: tensor([678, 678, 705, 773, 705, 705, 753, 678, 678])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([821, 821, 806, 957, 806, 821, 924, 806, 821])
predicted labels: tensor([622, 279, 622, 622, 279, 622, 622, 279, 622])
target labels: tensor([956, 898, 337, 110, 898, 337, 337, 898, 337])
predicted labels: tensor([1208, 1310,  622,  279, 1310,  622,  622, 1310, 1310])
target labels: tensor([839, 314, 813, 822, 314, 813, 813, 314, 314])
predicted labels: tensor([622, 622, 622, 622, 622, 622, 622, 622, 622])
target labels: tensor([771, 632, 632, 428, 428, 632, 428, 366, 632])
predicted labels: tensor([ 673,  622,  673, 1310,  622,  673, 1310,  622,  673])
target labels: tensor([453, 538, 453,  15, 538, 453, 431, 538, 453])
predicted labels: tensor([622, 622, 622, 622, 673, 622, 622, 622, 622])
target labels: tensor([253, 457, 253, 253, 426, 457, 778, 457, 253])
predicted labels: tensor([1310, 1310,  622,  622,  622,  622, 1310,  673,  622])
target labels: tensor([317, 317, 641, 641, 926, 641, 317, 577, 641])
predicted labels: tensor([1245,  622,  622,  622,  622,  622,  622,  622,  622])
target labels: tensor([717, 944, 851, 851, 944, 944, 851, 327, 944])
predicted labels: tensor([ 622,  622,  622, 1208, 1208, 1208,  673,  622, 1208])
target labels: tensor([789, 789, 320, 656, 656, 656, 918, 789, 656])
predicted labels: tensor([ 622,  622, 1245, 1310,  622,  622,  622,  622,  622])
target labels: tensor([781, 120, 868, 898, 120, 120, 781, 781, 120])
Traceback (most recent call last):
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/./experiment_resnet.py", line 71, in <module>
    experiment_base(dataset)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/./experiment_resnet.py", line 61, in experiment_base
    trainer.train()
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/train_resnet.py", line 113, in train
    loss.backward()
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
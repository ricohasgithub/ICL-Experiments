
Files already downloaded and verified
tensor([836,   0, 836,   0, 208,   0, 208,   0, 208,   0, 836,   0, 959,   0,
        450,   0, 208], dtype=torch.int32)
tensor([836, 836, 208, 208, 208, 836, 959, 450, 208], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3917, 7.3921, 7.3921,
        7.3923, 7.3921, 7.3923, 7.3922, 7.3921, 7.3921, 7.3923, 7.3920, 7.3921,
        7.3919, 7.3918, 7.3920, 7.3919, 7.3920, 7.3920, 7.3922, 7.3919, 7.3919,
        7.3922, 7.3922, 7.3919, 7.3919, 7.3921, 7.3919, 7.3919, 7.3922, 7.3919,
        7.3920, 7.3920, 7.3922, 7.3922, 7.3922, 7.3922, 7.3917, 7.3920, 7.3922,
        7.3918, 7.3924, 7.3924, 7.3924, 7.3919, 7.3919, 7.3918, 7.3918, 7.3918,
        7.3921, 7.3921, 7.3919, 7.3923, 7.3917, 7.3921, 7.3919, 7.3919, 7.3921,
        7.3920, 7.3919, 7.3921, 7.3921, 7.3919, 7.3921, 7.3919, 7.3921, 7.3921,
        7.3920, 7.3920, 7.3920, 7.3921, 7.3920, 7.3922, 7.3920, 7.3920, 7.3920,
        7.3920, 7.3921, 7.3921, 7.3920, 7.3920, 7.3921, 7.3920, 7.3918, 7.3920,
        7.3920, 7.3923, 7.3920, 7.3919, 7.3918, 7.3919, 7.3919, 7.3920, 7.3919,
        7.3920, 7.3920, 7.3922, 7.3922, 7.3922, 7.3918, 7.3920, 7.3921, 7.3922,
        7.3921, 7.3921, 7.3921, 7.3918, 7.3918, 7.3919, 7.3919, 7.3918, 7.3918,
        7.3922, 7.3920, 7.3919, 7.3922, 7.3922, 7.3920, 7.3922, 7.3920, 7.3922,
        7.3920, 7.3922, 7.3922, 7.3920, 7.3922, 7.3922, 7.3920, 7.3920, 7.3922,
        7.3922, 7.3919, 7.3921, 7.3921, 7.3921, 7.3921, 7.3922, 7.3922, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.4542236328125
avg_accuracy: 0.0
Global batch 0, avg loss after 100 batches: 10.645  | Global batch 0, avg accuracy after 100 batches: 0.0
tensor([264,   0, 678,   0, 485,   0, 621,   0, 612,   0, 240,   0,  65,   0,
        106,   0, 293], dtype=torch.int32)
tensor([264, 678, 485, 621, 612, 240,  65, 106, 293], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3923, 7.3921, 7.3921, 7.3917, 7.3922, 7.3922, 7.3923, 7.3921, 7.3917,
        7.3921, 7.3921, 7.3922, 7.3922, 7.3921, 7.3922, 7.3920, 7.3921, 7.3922,
        7.3919, 7.3921, 7.3919, 7.3922, 7.3922, 7.3920, 7.3920, 7.3921, 7.3922,
        7.3919, 7.3920, 7.3919, 7.3919, 7.3920, 7.3922, 7.3920, 7.3920, 7.3919,
        7.3918, 7.3922, 7.3922, 7.3922, 7.3922, 7.3916, 7.3916, 7.3916, 7.3916,
        7.3923, 7.3923, 7.3921, 7.3920, 7.3922, 7.3923, 7.3921, 7.3921, 7.3923,
        7.3919, 7.3921, 7.3920, 7.3915, 7.3920, 7.3920, 7.3915, 7.3915, 7.3920,
        7.3922, 7.3922, 7.3920, 7.3920, 7.3919, 7.3920, 7.3922, 7.3922, 7.3920,
        7.3919, 7.3919, 7.3920, 7.3918, 7.3920, 7.3920, 7.3919, 7.3919, 7.3919,
        7.3919, 7.3920, 7.3922, 7.3922, 7.3921, 7.3922, 7.3919, 7.3919, 7.3919,
        7.3920, 7.3921, 7.3921, 7.3921, 7.3921, 7.3918, 7.3921, 7.3921, 7.3921,
        7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3919, 7.3918, 7.3918, 7.3921, 7.3919, 7.3923, 7.3918, 7.3918,
        7.3921, 7.3921, 7.3922, 7.3922, 7.3921, 7.3921, 7.3922, 7.3921, 7.3921,
        7.3920, 7.3919, 7.3921, 7.3921, 7.3920, 7.3920, 7.3921, 7.3917, 7.3921,
        7.3922, 7.3922, 7.3922, 7.3923, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.454345703125
tensor([152,   0, 321,   0, 129,   0, 852,   0, 129,   0, 152,   0, 129,   0,
        152,   0, 129], dtype=torch.int32)
tensor([152, 321, 129, 852, 129, 152, 129, 152, 129], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3918, 7.3916, 7.3922, 7.3922, 7.3922, 7.3918, 7.3922, 7.3918, 7.3922,
        7.3918, 7.3918, 7.3920, 7.3920, 7.3920, 7.3918, 7.3919, 7.3922, 7.3920,
        7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3921, 7.3919, 7.3919,
        7.3919, 7.3922, 7.3922, 7.3919, 7.3919, 7.3922, 7.3924, 7.3922, 7.3919,
        7.3920, 7.3920, 7.3921, 7.3923, 7.3920, 7.3923, 7.3919, 7.3923, 7.3920,
        7.3918, 7.3922, 7.3922, 7.3918, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3922, 7.3919, 7.3922, 7.3921, 7.3919, 7.3923, 7.3919, 7.3922, 7.3919,
        7.3920, 7.3920, 7.3921, 7.3916, 7.3922, 7.3920, 7.3916, 7.3916, 7.3920,
        7.3921, 7.3919, 7.3920, 7.3921, 7.3920, 7.3918, 7.3921, 7.3920, 7.3920,
        7.3922, 7.3921, 7.3921, 7.3921, 7.3922, 7.3922, 7.3919, 7.3921, 7.3921,
        7.3920, 7.3922, 7.3920, 7.3920, 7.3922, 7.3915, 7.3918, 7.3922, 7.3922,
        7.3920, 7.3923, 7.3920, 7.3922, 7.3920, 7.3922, 7.3921, 7.3922, 7.3920,
        7.3920, 7.3918, 7.3921, 7.3920, 7.3921, 7.3920, 7.3918, 7.3921, 7.3920,
        7.3920, 7.3921, 7.3921, 7.3920, 7.3921, 7.3920, 7.3920, 7.3921, 7.3920,
        7.3918, 7.3918, 7.3918, 7.3918, 7.3920, 7.3918, 7.3918, 7.3923, 7.3918,
        7.3921, 7.3921, 7.3918, 7.3921, 7.3918, 7.3918, 7.3921, 7.3922, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.4505615234375
tensor([461,   0, 531,   0, 790,   0, 819,   0, 461,   0, 531,   0, 461,   0,
        531,   0, 461], dtype=torch.int32)
tensor([461, 531, 790, 819, 461, 531, 461, 531, 461], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3918, 7.3921, 7.3919, 7.3920, 7.3918, 7.3921, 7.3918, 7.3921, 7.3918,
        7.3921, 7.3918, 7.3922, 7.3918, 7.3922, 7.3922, 7.3921, 7.3921, 7.3922,
        7.3917, 7.3920, 7.3921, 7.3921, 7.3920, 7.3920, 7.3921, 7.3922, 7.3920,
        7.3919, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3918, 7.3921,
        7.3918, 7.3916, 7.3922, 7.3916, 7.3918, 7.3916, 7.3918, 7.3920, 7.3916,
        7.3922, 7.3920, 7.3919, 7.3919, 7.3919, 7.3921, 7.3920, 7.3920, 7.3919,
        7.3921, 7.3921, 7.3916, 7.3917, 7.3917, 7.3921, 7.3917, 7.3922, 7.3921,
        7.3917, 7.3919, 7.3919, 7.3923, 7.3923, 7.3923, 7.3918, 7.3919, 7.3919,
        7.3922, 7.3922, 7.3923, 7.3922, 7.3922, 7.3923, 7.3923, 7.3922, 7.3923,
        7.3921, 7.3919, 7.3922, 7.3922, 7.3919, 7.3917, 7.3922, 7.3920, 7.3920,
        7.3917, 7.3920, 7.3920, 7.3917, 7.3917, 7.3922, 7.3920, 7.3920, 7.3920,
        7.3918, 7.3922, 7.3918, 7.3919, 7.3922, 7.3920, 7.3918, 7.3922, 7.3922,
        7.3920, 7.3920, 7.3915, 7.3920, 7.3920, 7.3917, 7.3920, 7.3920, 7.3920,
        7.3919, 7.3919, 7.3918, 7.3919, 7.3918, 7.3918, 7.3921, 7.3918, 7.3919,
        7.3922, 7.3919, 7.3923, 7.3922, 7.3920, 7.3919, 7.3919, 7.3922, 7.3920,
        7.3920, 7.3920, 7.3922, 7.3920, 7.3922, 7.3920, 7.3922, 7.3923, 7.3920],
       grad_fn=<NegBackward0>)
loss: 1064.4476318359375
tensor([830,   0, 830,   0, 830,   0, 773,   0, 773,   0, 147,   0, 184,   0,
        773,   0, 830], dtype=torch.int32)
tensor([830, 830, 830, 773, 773, 147, 184, 773, 830], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3922, 7.3922, 7.3922, 7.3920, 7.3920, 7.3921, 7.3918, 7.3920, 7.3922,
        7.3920, 7.3920, 7.3920, 7.3919, 7.3919, 7.3919, 7.3919, 7.3920, 7.3919,
        7.3918, 7.3917, 7.3917, 7.3922, 7.3917, 7.3922, 7.3920, 7.3922, 7.3922,
        7.3921, 7.3921, 7.3922, 7.3921, 7.3921, 7.3921, 7.3921, 7.3919, 7.3921,
        7.3923, 7.3923, 7.3922, 7.3922, 7.3922, 7.3923, 7.3922, 7.3922, 7.3922,
        7.3921, 7.3921, 7.3918, 7.3922, 7.3921, 7.3922, 7.3922, 7.3922, 7.3921,
        7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919,
        7.3919, 7.3921, 7.3919, 7.3920, 7.3921, 7.3921, 7.3921, 7.3919, 7.3921,
        7.3921, 7.3918, 7.3918, 7.3923, 7.3921, 7.3921, 7.3921, 7.3918, 7.3921,
        7.3920, 7.3921, 7.3919, 7.3920, 7.3920, 7.3921, 7.3921, 7.3920, 7.3920,
        7.3921, 7.3921, 7.3921, 7.3920, 7.3921, 7.3922, 7.3920, 7.3920, 7.3920,
        7.3923, 7.3923, 7.3918, 7.3921, 7.3918, 7.3921, 7.3918, 7.3921, 7.3918,
        7.3923, 7.3917, 7.3923, 7.3923, 7.3923, 7.3920, 7.3923, 7.3923, 7.3923,
        7.3922, 7.3919, 7.3920, 7.3921, 7.3919, 7.3921, 7.3921, 7.3919, 7.3919,
        7.3918, 7.3922, 7.3922, 7.3921, 7.3921, 7.3922, 7.3921, 7.3922, 7.3922,
        7.3920, 7.3921, 7.3917, 7.3920, 7.3921, 7.3920, 7.3921, 7.3920, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.4552001953125
tensor([319,   0, 464,   0, 319,   0, 464,   0, 464,   0, 816,   0, 319,   0,
        160,   0, 464], dtype=torch.int32)
tensor([319, 464, 319, 464, 464, 816, 319, 160, 464], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3923, 7.3918, 7.3923, 7.3918, 7.3918, 7.3921, 7.3923, 7.3919, 7.3918,
        7.3918, 7.3919, 7.3918, 7.3922, 7.3919, 7.3918, 7.3918, 7.3919, 7.3918,
        7.3919, 7.3921, 7.3921, 7.3921, 7.3921, 7.3919, 7.3921, 7.3919, 7.3919,
        7.3920, 7.3922, 7.3923, 7.3923, 7.3923, 7.3923, 7.3920, 7.3920, 7.3920,
        7.3919, 7.3919, 7.3923, 7.3919, 7.3919, 7.3923, 7.3919, 7.3923, 7.3919,
        7.3919, 7.3919, 7.3922, 7.3919, 7.3918, 7.3919, 7.3919, 7.3919, 7.3919,
        7.3920, 7.3918, 7.3921, 7.3921, 7.3920, 7.3920, 7.3921, 7.3921, 7.3920,
        7.3923, 7.3921, 7.3919, 7.3921, 7.3919, 7.3921, 7.3921, 7.3919, 7.3921,
        7.3922, 7.3922, 7.3919, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3919, 7.3921, 7.3921, 7.3921, 7.3920, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3921, 7.3923, 7.3918, 7.3921, 7.3922, 7.3918, 7.3920, 7.3924, 7.3921,
        7.3922, 7.3917, 7.3920, 7.3917, 7.3920, 7.3920, 7.3920, 7.3917, 7.3917,
        7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3921, 7.3920, 7.3920, 7.3920, 7.3920, 7.3923, 7.3920, 7.3920, 7.3920,
        7.3920, 7.3919, 7.3920, 7.3920, 7.3920, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3919, 7.3920, 7.3917, 7.3922, 7.3920, 7.3922, 7.3922, 7.3920, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.4537353515625
tensor([935,   0, 792,   0, 144,   0, 724,   0, 935,   0, 935,   0, 792,   0,
        792,   0, 792], dtype=torch.int32)
tensor([935, 792, 144, 724, 935, 935, 792, 792, 792], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3919, 7.3922, 7.3920, 7.3922, 7.3919, 7.3919, 7.3922, 7.3922, 7.3922,
        7.3923, 7.3921, 7.3920, 7.3920, 7.3921, 7.3922, 7.3920, 7.3921, 7.3920,
        7.3922, 7.3919, 7.3919, 7.3917, 7.3918, 7.3918, 7.3919, 7.3918, 7.3918,
        7.3923, 7.3920, 7.3920, 7.3921, 7.3920, 7.3920, 7.3921, 7.3921, 7.3920,
        7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3922, 7.3921, 7.3921,
        7.3923, 7.3918, 7.3919, 7.3919, 7.3919, 7.3917, 7.3918, 7.3919, 7.3918,
        7.3917, 7.3920, 7.3922, 7.3922, 7.3921, 7.3922, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3919, 7.3919, 7.3920, 7.3922, 7.3919, 7.3922, 7.3922, 7.3919,
        7.3921, 7.3921, 7.3920, 7.3921, 7.3920, 7.3921, 7.3918, 7.3920, 7.3921,
        7.3922, 7.3919, 7.3920, 7.3920, 7.3922, 7.3920, 7.3919, 7.3922, 7.3920,
        7.3920, 7.3923, 7.3922, 7.3922, 7.3922, 7.3920, 7.3922, 7.3920, 7.3920,
        7.3920, 7.3921, 7.3920, 7.3920, 7.3921, 7.3923, 7.3921, 7.3921, 7.3921,
        7.3918, 7.3918, 7.3918, 7.3920, 7.3923, 7.3924, 7.3923, 7.3923, 7.3918,
        7.3917, 7.3917, 7.3920, 7.3917, 7.3922, 7.3921, 7.3920, 7.3920, 7.3920,
        7.3920, 7.3921, 7.3920, 7.3921, 7.3921, 7.3921, 7.3920, 7.3921, 7.3921,
        7.3921, 7.3920, 7.3921, 7.3921, 7.3920, 7.3921, 7.3918, 7.3922, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.4532470703125
tensor([350,   0, 350,   0, 742,   0, 160,   0, 160,   0, 160,   0, 350,   0,
        417,   0, 160], dtype=torch.int32)
tensor([350, 350, 742, 160, 160, 160, 350, 417, 160], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3922, 7.3922, 7.3921, 7.3919, 7.3919, 7.3919, 7.3922, 7.3920, 7.3919,
        7.3920, 7.3920, 7.3921, 7.3920, 7.3921, 7.3921, 7.3920, 7.3921, 7.3920,
        7.3921, 7.3921, 7.3921, 7.3921, 7.3919, 7.3919, 7.3919, 7.3919, 7.3921,
        7.3922, 7.3917, 7.3922, 7.3921, 7.3921, 7.3921, 7.3922, 7.3921, 7.3922,
        7.3921, 7.3921, 7.3921, 7.3919, 7.3919, 7.3919, 7.3921, 7.3919, 7.3919,
        7.3922, 7.3917, 7.3920, 7.3919, 7.3920, 7.3920, 7.3922, 7.3922, 7.3920,
        7.3921, 7.3920, 7.3921, 7.3920, 7.3918, 7.3920, 7.3919, 7.3919, 7.3918,
        7.3923, 7.3919, 7.3921, 7.3921, 7.3922, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3920, 7.3920, 7.3921, 7.3922, 7.3921, 7.3920, 7.3919, 7.3921, 7.3921,
        7.3920, 7.3920, 7.3920, 7.3919, 7.3920, 7.3919, 7.3920, 7.3919, 7.3920,
        7.3920, 7.3922, 7.3916, 7.3920, 7.3920, 7.3919, 7.3916, 7.3916, 7.3916,
        7.3921, 7.3921, 7.3922, 7.3922, 7.3921, 7.3922, 7.3918, 7.3920, 7.3922,
        7.3919, 7.3920, 7.3919, 7.3919, 7.3924, 7.3921, 7.3920, 7.3919, 7.3921,
        7.3920, 7.3920, 7.3922, 7.3919, 7.3919, 7.3920, 7.3919, 7.3919, 7.3919,
        7.3922, 7.3921, 7.3921, 7.3921, 7.3919, 7.3920, 7.3922, 7.3922, 7.3921,
        7.3921, 7.3920, 7.3920, 7.3920, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.4517822265625
tensor([438,   0, 406,   0, 364,   0, 438,   0, 364,   0, 322,   0, 364,   0,
        438,   0, 364], dtype=torch.int32)
tensor([438, 406, 364, 438, 364, 322, 364, 438, 364], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3920, 7.3921, 7.3920, 7.3920, 7.3920, 7.3918, 7.3920, 7.3920, 7.3920,
        7.3919, 7.3921, 7.3919, 7.3919, 7.3921, 7.3921, 7.3920, 7.3922, 7.3921,
        7.3919, 7.3919, 7.3920, 7.3919, 7.3921, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3918, 7.3919, 7.3921, 7.3921, 7.3919, 7.3919, 7.3921, 7.3921, 7.3921,
        7.3922, 7.3922, 7.3921, 7.3921, 7.3921, 7.3922, 7.3921, 7.3921, 7.3922,
        7.3920, 7.3922, 7.3922, 7.3921, 7.3920, 7.3919, 7.3922, 7.3920, 7.3914,
        7.3916, 7.3922, 7.3920, 7.3920, 7.3921, 7.3921, 7.3920, 7.3921, 7.3921,
        7.3919, 7.3921, 7.3919, 7.3921, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919,
        7.3916, 7.3921, 7.3916, 7.3916, 7.3917, 7.3917, 7.3918, 7.3917, 7.3916,
        7.3919, 7.3922, 7.3919, 7.3919, 7.3922, 7.3919, 7.3922, 7.3919, 7.3919,
        7.3923, 7.3922, 7.3920, 7.3923, 7.3923, 7.3920, 7.3920, 7.3920, 7.3923,
        7.3921, 7.3923, 7.3923, 7.3923, 7.3918, 7.3919, 7.3919, 7.3919, 7.3923,
        7.3921, 7.3917, 7.3922, 7.3919, 7.3922, 7.3920, 7.3921, 7.3922, 7.3920,
        7.3921, 7.3919, 7.3919, 7.3919, 7.3919, 7.3923, 7.3921, 7.3921, 7.3919,
        7.3918, 7.3918, 7.3920, 7.3920, 7.3920, 7.3920, 7.3918, 7.3921, 7.3918,
        7.3919, 7.3919, 7.3919, 7.3919, 7.3922, 7.3919, 7.3918, 7.3919, 7.3919],
       grad_fn=<NegBackward0>)
loss: 1064.447021484375
tensor([916,   0,   7,   0, 603,   0,   7,   0, 603,   0,   7,   0, 603,   0,
        816,   0,   7], dtype=torch.int32)
tensor([916,   7, 603,   7, 603,   7, 603, 816,   7], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3920, 7.3917, 7.3920, 7.3917, 7.3920, 7.3917, 7.3920, 7.3921, 7.3917,
        7.3921, 7.3921, 7.3915, 7.3915, 7.3920, 7.3923, 7.3915, 7.3921, 7.3921,
        7.3922, 7.3922, 7.3922, 7.3922, 7.3919, 7.3922, 7.3919, 7.3919, 7.3919,
        7.3919, 7.3920, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3923, 7.3919,
        7.3918, 7.3918, 7.3918, 7.3920, 7.3919, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3920, 7.3918, 7.3919, 7.3922, 7.3920, 7.3920, 7.3919, 7.3919, 7.3920,
        7.3917, 7.3920, 7.3917, 7.3920, 7.3920, 7.3923, 7.3923, 7.3923, 7.3920,
        7.3919, 7.3919, 7.3921, 7.3921, 7.3919, 7.3921, 7.3919, 7.3921, 7.3921,
        7.3921, 7.3920, 7.3921, 7.3920, 7.3921, 7.3919, 7.3920, 7.3920, 7.3920,
        7.3921, 7.3921, 7.3922, 7.3921, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3917, 7.3917, 7.3917, 7.3923, 7.3921, 7.3923, 7.3923, 7.3922, 7.3917,
        7.3919, 7.3922, 7.3918, 7.3920, 7.3919, 7.3922, 7.3919, 7.3922, 7.3919,
        7.3922, 7.3921, 7.3921, 7.3922, 7.3922, 7.3921, 7.3922, 7.3920, 7.3921,
        7.3922, 7.3920, 7.3922, 7.3920, 7.3919, 7.3920, 7.3922, 7.3920, 7.3922,
        7.3918, 7.3919, 7.3919, 7.3919, 7.3919, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3921, 7.3920, 7.3920, 7.3920, 7.3921, 7.3922, 7.3920, 7.3921, 7.3920],
       grad_fn=<NegBackward0>)
loss: 1064.4482421875
tensor([645,   0, 132,   0, 898,   0, 898,   0, 898,   0, 543,   0, 543,   0,
        543,   0, 543], dtype=torch.int32)
tensor([645, 132, 898, 898, 898, 543, 543, 543, 543], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3918, 7.3920, 7.3922, 7.3922, 7.3922, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3922, 7.3922, 7.3920, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3920, 7.3920, 7.3919, 7.3919, 7.3919, 7.3921, 7.3920, 7.3922, 7.3920,
        7.3920, 7.3921, 7.3920, 7.3920, 7.3919, 7.3921, 7.3921, 7.3920, 7.3921,
        7.3919, 7.3919, 7.3919, 7.3918, 7.3916, 7.3918, 7.3919, 7.3918, 7.3918,
        7.3922, 7.3922, 7.3920, 7.3920, 7.3921, 7.3920, 7.3920, 7.3922, 7.3920,
        7.3921, 7.3921, 7.3921, 7.3920, 7.3916, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3917, 7.3921, 7.3917, 7.3919, 7.3917, 7.3919, 7.3919, 7.3919,
        7.3921, 7.3919, 7.3921, 7.3918, 7.3921, 7.3918, 7.3921, 7.3918, 7.3921,
        7.3918, 7.3919, 7.3919, 7.3919, 7.3922, 7.3922, 7.3922, 7.3920, 7.3922,
        7.3923, 7.3919, 7.3923, 7.3923, 7.3919, 7.3919, 7.3920, 7.3923, 7.3923,
        7.3918, 7.3922, 7.3917, 7.3920, 7.3919, 7.3919, 7.3921, 7.3919, 7.3921,
        7.3921, 7.3921, 7.3920, 7.3921, 7.3920, 7.3921, 7.3920, 7.3920, 7.3920,
        7.3920, 7.3919, 7.3920, 7.3919, 7.3919, 7.3920, 7.3920, 7.3919, 7.3920,
        7.3920, 7.3920, 7.3919, 7.3919, 7.3922, 7.3922, 7.3919, 7.3920, 7.3920,
        7.3920, 7.3918, 7.3917, 7.3920, 7.3917, 7.3920, 7.3919, 7.3917, 7.3920],
       grad_fn=<NegBackward0>)
loss: 1064.4483642578125
tensor([804,   0,  83,   0, 165,   0, 350,   0, 129,   0,  53,   0,  57,   0,
        762,   0, 257], dtype=torch.int32)
tensor([804,  83, 165, 350, 129,  53,  57, 762, 257], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3920, 7.3920, 7.3922, 7.3922, 7.3921, 7.3920, 7.3917, 7.3920, 7.3921,
        7.3919, 7.3921, 7.3921, 7.3921, 7.3919, 7.3919, 7.3919, 7.3921, 7.3921,
        7.3922, 7.3918, 7.3924, 7.3919, 7.3921, 7.3921, 7.3922, 7.3915, 7.3922,
        7.3920, 7.3920, 7.3922, 7.3922, 7.3919, 7.3920, 7.3922, 7.3920, 7.3922,
        7.3919, 7.3920, 7.3919, 7.3920, 7.3919, 7.3918, 7.3919, 7.3920, 7.3919,
        7.3918, 7.3920, 7.3919, 7.3919, 7.3918, 7.3914, 7.3919, 7.3918, 7.3918,
        7.3921, 7.3921, 7.3919, 7.3920, 7.3917, 7.3921, 7.3919, 7.3919, 7.3921,
        7.3920, 7.3921, 7.3921, 7.3922, 7.3922, 7.3922, 7.3920, 7.3922, 7.3922,
        7.3921, 7.3922, 7.3921, 7.3919, 7.3918, 7.3921, 7.3921, 7.3917, 7.3918,
        7.3922, 7.3921, 7.3921, 7.3920, 7.3918, 7.3920, 7.3920, 7.3921, 7.3921,
        7.3922, 7.3920, 7.3919, 7.3919, 7.3922, 7.3919, 7.3922, 7.3920, 7.3919,
        7.3919, 7.3922, 7.3917, 7.3919, 7.3918, 7.3919, 7.3918, 7.3918, 7.3919,
        7.3920, 7.3919, 7.3919, 7.3920, 7.3919, 7.3920, 7.3920, 7.3919, 7.3919,
        7.3919, 7.3919, 7.3920, 7.3920, 7.3923, 7.3919, 7.3920, 7.3923, 7.3920,
        7.3922, 7.3917, 7.3917, 7.3921, 7.3917, 7.3922, 7.3917, 7.3922, 7.3917,
        7.3921, 7.3922, 7.3920, 7.3922, 7.3919, 7.3921, 7.3921, 7.3921, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.4476318359375
tensor([131,   0, 902,   0, 165,   0, 481,   0, 165,   0, 131,   0, 165,   0,
        131,   0, 165], dtype=torch.int32)
tensor([131, 902, 165, 481, 165, 131, 165, 131, 165], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3917, 7.3923, 7.3922, 7.3922, 7.3922, 7.3917, 7.3922, 7.3917, 7.3922,
        7.3919, 7.3921, 7.3922, 7.3920, 7.3920, 7.3920, 7.3920, 7.3922, 7.3919,
        7.3921, 7.3919, 7.3922, 7.3920, 7.3922, 7.3918, 7.3919, 7.3918, 7.3919,
        7.3920, 7.3920, 7.3921, 7.3921, 7.3922, 7.3920, 7.3922, 7.3921, 7.3920,
        7.3920, 7.3920, 7.3920, 7.3920, 7.3919, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3919, 7.3922, 7.3917, 7.3919, 7.3921, 7.3919, 7.3922, 7.3922, 7.3919,
        7.3923, 7.3922, 7.3919, 7.3919, 7.3923, 7.3923, 7.3915, 7.3919, 7.3919,
        7.3920, 7.3921, 7.3919, 7.3919, 7.3921, 7.3922, 7.3918, 7.3923, 7.3922,
        7.3922, 7.3922, 7.3920, 7.3920, 7.3922, 7.3920, 7.3920, 7.3921, 7.3922,
        7.3919, 7.3919, 7.3921, 7.3919, 7.3921, 7.3921, 7.3916, 7.3921, 7.3921,
        7.3920, 7.3920, 7.3923, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3920, 7.3918, 7.3922, 7.3922, 7.3920, 7.3922, 7.3920, 7.3918, 7.3920,
        7.3920, 7.3917, 7.3920, 7.3923, 7.3917, 7.3920, 7.3918, 7.3917, 7.3917,
        7.3919, 7.3919, 7.3918, 7.3918, 7.3919, 7.3918, 7.3919, 7.3919, 7.3918,
        7.3922, 7.3918, 7.3922, 7.3921, 7.3921, 7.3918, 7.3921, 7.3920, 7.3917,
        7.3920, 7.3920, 7.3922, 7.3921, 7.3920, 7.3922, 7.3920, 7.3922, 7.3920],
       grad_fn=<NegBackward0>)
loss: 1064.4493408203125
tensor([620,   0, 312,   0, 612,   0, 612,   0, 620,   0, 612,   0,  43,   0,
        620,   0, 612], dtype=torch.int32)
tensor([620, 312, 612, 612, 620, 612,  43, 620, 612], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3920, 7.3919, 7.3921, 7.3921, 7.3920, 7.3921, 7.3924, 7.3920, 7.3921,
        7.3919, 7.3919, 7.3921, 7.3921, 7.3920, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3918, 7.3922, 7.3922, 7.3922, 7.3922, 7.3920, 7.3922, 7.3922, 7.3922,
        7.3921, 7.3921, 7.3921, 7.3919, 7.3919, 7.3921, 7.3921, 7.3919, 7.3921,
        7.3921, 7.3919, 7.3918, 7.3918, 7.3918, 7.3920, 7.3919, 7.3919, 7.3919,
        7.3919, 7.3923, 7.3923, 7.3921, 7.3923, 7.3919, 7.3921, 7.3919, 7.3923,
        7.3920, 7.3921, 7.3922, 7.3922, 7.3922, 7.3922, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3919, 7.3918, 7.3918, 7.3919, 7.3919, 7.3923, 7.3918, 7.3919,
        7.3923, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3915, 7.3921,
        7.3916, 7.3922, 7.3920, 7.3916, 7.3922, 7.3921, 7.3922, 7.3916, 7.3922,
        7.3919, 7.3919, 7.3919, 7.3923, 7.3919, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3920, 7.3919, 7.3922, 7.3918, 7.3922, 7.3922, 7.3918, 7.3918, 7.3922,
        7.3921, 7.3920, 7.3921, 7.3920, 7.3921, 7.3918, 7.3921, 7.3920, 7.3921,
        7.3922, 7.3922, 7.3918, 7.3922, 7.3922, 7.3923, 7.3922, 7.3922, 7.3922,
        7.3920, 7.3916, 7.3920, 7.3924, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3922, 7.3920, 7.3919, 7.3920, 7.3920, 7.3919, 7.3919, 7.3920, 7.3919],
       grad_fn=<NegBackward0>)
loss: 1064.4534912109375
tensor([441,   0, 441,   0, 441,   0, 494,   0, 715,   0, 715,   0, 445,   0,
        715,   0, 715], dtype=torch.int32)
tensor([441, 441, 441, 494, 715, 715, 445, 715, 715], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3917, 7.3917, 7.3917, 7.3917, 7.3923, 7.3923, 7.3922, 7.3923, 7.3923,
        7.3917, 7.3920, 7.3918, 7.3920, 7.3922, 7.3918, 7.3918, 7.3920, 7.3920,
        7.3922, 7.3920, 7.3919, 7.3918, 7.3922, 7.3919, 7.3922, 7.3919, 7.3919,
        7.3919, 7.3920, 7.3919, 7.3919, 7.3920, 7.3919, 7.3920, 7.3920, 7.3920,
        7.3922, 7.3921, 7.3921, 7.3921, 7.3921, 7.3922, 7.3921, 7.3922, 7.3922,
        7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3921, 7.3920,
        7.3920, 7.3917, 7.3918, 7.3917, 7.3920, 7.3917, 7.3920, 7.3917, 7.3920,
        7.3921, 7.3920, 7.3921, 7.3920, 7.3920, 7.3921, 7.3920, 7.3921, 7.3920,
        7.3921, 7.3922, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3920, 7.3920, 7.3922, 7.3921, 7.3920, 7.3922, 7.3919, 7.3922, 7.3920,
        7.3921, 7.3921, 7.3917, 7.3920, 7.3918, 7.3918, 7.3918, 7.3923, 7.3920,
        7.3920, 7.3921, 7.3922, 7.3917, 7.3920, 7.3916, 7.3920, 7.3919, 7.3917,
        7.3919, 7.3923, 7.3920, 7.3922, 7.3917, 7.3922, 7.3923, 7.3918, 7.3920,
        7.3923, 7.3917, 7.3917, 7.3923, 7.3923, 7.3919, 7.3921, 7.3917, 7.3917,
        7.3921, 7.3917, 7.3921, 7.3921, 7.3917, 7.3918, 7.3917, 7.3920, 7.3921,
        7.3921, 7.3917, 7.3921, 7.3917, 7.3921, 7.3921, 7.3917, 7.3920, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.4471435546875
tensor([110,   0, 110,   0,  16,   0, 110,   0, 375,   0, 375,   0, 375,   0,
        616,   0, 375], dtype=torch.int32)
tensor([110, 110,  16, 110, 375, 375, 375, 616, 375], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3920, 7.3920, 7.3920, 7.3920, 7.3919, 7.3919, 7.3919, 7.3921, 7.3919,
        7.3921, 7.3920, 7.3921, 7.3922, 7.3917, 7.3920, 7.3921, 7.3920, 7.3920,
        7.3923, 7.3919, 7.3919, 7.3919, 7.3923, 7.3919, 7.3923, 7.3921, 7.3919,
        7.3919, 7.3921, 7.3921, 7.3918, 7.3918, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3918, 7.3918, 7.3921, 7.3923, 7.3921, 7.3921, 7.3918, 7.3922, 7.3921,
        7.3922, 7.3922, 7.3921, 7.3921, 7.3919, 7.3922, 7.3921, 7.3921, 7.3922,
        7.3922, 7.3922, 7.3922, 7.3919, 7.3923, 7.3919, 7.3919, 7.3919, 7.3922,
        7.3920, 7.3918, 7.3918, 7.3922, 7.3918, 7.3922, 7.3922, 7.3922, 7.3918,
        7.3921, 7.3921, 7.3921, 7.3920, 7.3920, 7.3917, 7.3920, 7.3923, 7.3921,
        7.3919, 7.3917, 7.3921, 7.3918, 7.3918, 7.3918, 7.3917, 7.3917, 7.3917,
        7.3922, 7.3916, 7.3918, 7.3920, 7.3916, 7.3916, 7.3918, 7.3918, 7.3916,
        7.3921, 7.3921, 7.3923, 7.3923, 7.3918, 7.3921, 7.3923, 7.3923, 7.3921,
        7.3922, 7.3920, 7.3921, 7.3921, 7.3919, 7.3920, 7.3920, 7.3919, 7.3922,
        7.3917, 7.3919, 7.3919, 7.3921, 7.3920, 7.3921, 7.3920, 7.3920, 7.3922,
        7.3919, 7.3920, 7.3919, 7.3921, 7.3921, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3919, 7.3923, 7.3923, 7.3919, 7.3923, 7.3919, 7.3922, 7.3919, 7.3919],
       grad_fn=<NegBackward0>)
loss: 1064.449462890625
tensor([842,   0, 959,   0, 463,   0, 471,   0,  94,   0, 590,   0, 648,   0,
        719,   0, 521], dtype=torch.int32)
tensor([842, 959, 463, 471,  94, 590, 648, 719, 521], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3921, 7.3917, 7.3921, 7.3919, 7.3919, 7.3922, 7.3922, 7.3921, 7.3920,
        7.3922, 7.3922, 7.3918, 7.3918, 7.3919, 7.3922, 7.3922, 7.3918, 7.3918,
        7.3918, 7.3923, 7.3923, 7.3923, 7.3922, 7.3923, 7.3922, 7.3922, 7.3923,
        7.3922, 7.3920, 7.3922, 7.3920, 7.3919, 7.3920, 7.3920, 7.3922, 7.3922,
        7.3917, 7.3918, 7.3918, 7.3918, 7.3921, 7.3918, 7.3918, 7.3918, 7.3918,
        7.3921, 7.3921, 7.3922, 7.3921, 7.3921, 7.3922, 7.3922, 7.3916, 7.3921,
        7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3921, 7.3920, 7.3921, 7.3920,
        7.3919, 7.3920, 7.3920, 7.3920, 7.3919, 7.3920, 7.3919, 7.3920, 7.3919,
        7.3920, 7.3921, 7.3921, 7.3920, 7.3920, 7.3921, 7.3921, 7.3916, 7.3921,
        7.3916, 7.3922, 7.3919, 7.3921, 7.3921, 7.3919, 7.3921, 7.3919, 7.3919,
        7.3922, 7.3922, 7.3920, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3923, 7.3920, 7.3919, 7.3918, 7.3919, 7.3920, 7.3920, 7.3919, 7.3919,
        7.3915, 7.3915, 7.3919, 7.3922, 7.3919, 7.3919, 7.3915, 7.3919, 7.3919,
        7.3919, 7.3919, 7.3919, 7.3922, 7.3922, 7.3919, 7.3922, 7.3921, 7.3922,
        7.3918, 7.3923, 7.3920, 7.3923, 7.3923, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3922, 7.3919, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922, 7.3916, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.451171875
tensor([462,   0, 202,   0, 462,   0, 803,   0, 390,   0, 462,   0, 202,   0,
        202,   0, 202], dtype=torch.int32)
tensor([462, 202, 462, 803, 390, 462, 202, 202, 202], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3918, 7.3920, 7.3918, 7.3919, 7.3920, 7.3918, 7.3920, 7.3920, 7.3920,
        7.3918, 7.3921, 7.3918, 7.3921, 7.3918, 7.3918, 7.3921, 7.3921, 7.3921,
        7.3922, 7.3923, 7.3920, 7.3923, 7.3920, 7.3922, 7.3920, 7.3922, 7.3922,
        7.3923, 7.3923, 7.3922, 7.3923, 7.3923, 7.3923, 7.3923, 7.3922, 7.3923,
        7.3920, 7.3919, 7.3919, 7.3920, 7.3922, 7.3919, 7.3919, 7.3920, 7.3920,
        7.3920, 7.3919, 7.3920, 7.3920, 7.3921, 7.3920, 7.3922, 7.3920, 7.3919,
        7.3920, 7.3921, 7.3921, 7.3919, 7.3921, 7.3920, 7.3920, 7.3920, 7.3921,
        7.3920, 7.3919, 7.3920, 7.3919, 7.3918, 7.3921, 7.3920, 7.3919, 7.3920,
        7.3918, 7.3918, 7.3918, 7.3918, 7.3920, 7.3918, 7.3921, 7.3918, 7.3918,
        7.3921, 7.3922, 7.3921, 7.3919, 7.3916, 7.3916, 7.3916, 7.3921, 7.3916,
        7.3918, 7.3920, 7.3920, 7.3920, 7.3922, 7.3918, 7.3920, 7.3918, 7.3918,
        7.3922, 7.3920, 7.3921, 7.3920, 7.3917, 7.3917, 7.3917, 7.3920, 7.3917,
        7.3921, 7.3922, 7.3922, 7.3921, 7.3921, 7.3921, 7.3921, 7.3922, 7.3921,
        7.3921, 7.3922, 7.3921, 7.3918, 7.3917, 7.3917, 7.3917, 7.3921, 7.3921,
        7.3920, 7.3921, 7.3920, 7.3916, 7.3916, 7.3922, 7.3920, 7.3916, 7.3920,
        7.3916, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.4466552734375
tensor([163,   0, 531,   0, 163,   0, 503,   0, 503,   0, 454,   0, 503,   0,
        163,   0, 503], dtype=torch.int32)
tensor([163, 531, 163, 503, 503, 454, 503, 163, 503], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3922, 7.3921, 7.3922, 7.3922, 7.3922, 7.3917, 7.3922, 7.3922, 7.3922,
        7.3919, 7.3916, 7.3921, 7.3919, 7.3919, 7.3919, 7.3921, 7.3921, 7.3921,
        7.3921, 7.3921, 7.3921, 7.3919, 7.3917, 7.3919, 7.3919, 7.3921, 7.3921,
        7.3918, 7.3918, 7.3917, 7.3918, 7.3917, 7.3917, 7.3918, 7.3921, 7.3917,
        7.3921, 7.3921, 7.3919, 7.3921, 7.3919, 7.3921, 7.3919, 7.3917, 7.3921,
        7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3916, 7.3920, 7.3920,
        7.3919, 7.3923, 7.3921, 7.3921, 7.3919, 7.3921, 7.3922, 7.3919, 7.3919,
        7.3922, 7.3918, 7.3920, 7.3918, 7.3924, 7.3922, 7.3918, 7.3922, 7.3920,
        7.3919, 7.3922, 7.3916, 7.3918, 7.3920, 7.3922, 7.3922, 7.3918, 7.3917,
        7.3920, 7.3922, 7.3920, 7.3922, 7.3922, 7.3920, 7.3918, 7.3921, 7.3922,
        7.3921, 7.3921, 7.3918, 7.3919, 7.3918, 7.3921, 7.3918, 7.3920, 7.3921,
        7.3918, 7.3920, 7.3920, 7.3918, 7.3918, 7.3919, 7.3918, 7.3920, 7.3920,
        7.3918, 7.3922, 7.3920, 7.3919, 7.3920, 7.3919, 7.3921, 7.3921, 7.3922,
        7.3920, 7.3917, 7.3917, 7.3921, 7.3921, 7.3920, 7.3917, 7.3921, 7.3917,
        7.3920, 7.3921, 7.3918, 7.3920, 7.3920, 7.3920, 7.3921, 7.3921, 7.3919,
        7.3923, 7.3919, 7.3923, 7.3919, 7.3922, 7.3923, 7.3919, 7.3923, 7.3919],
       grad_fn=<NegBackward0>)
loss: 1064.44580078125
tensor([562,   0, 343,   0,  71,   0, 831,   0,  71,   0, 831,   0,  71,   0,
        831,   0,  71], dtype=torch.int32)
tensor([562, 343,  71, 831,  71, 831,  71, 831,  71], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3922, 7.3916, 7.3920, 7.3918, 7.3920, 7.3918, 7.3920, 7.3918, 7.3920,
        7.3919, 7.3920, 7.3920, 7.3919, 7.3919, 7.3919, 7.3920, 7.3919, 7.3919,
        7.3922, 7.3919, 7.3919, 7.3919, 7.3919, 7.3919, 7.3922, 7.3919, 7.3919,
        7.3917, 7.3920, 7.3917, 7.3917, 7.3920, 7.3916, 7.3920, 7.3920, 7.3917,
        7.3919, 7.3922, 7.3923, 7.3923, 7.3923, 7.3920, 7.3922, 7.3922, 7.3923,
        7.3917, 7.3918, 7.3918, 7.3917, 7.3918, 7.3917, 7.3917, 7.3921, 7.3917,
        7.3918, 7.3921, 7.3919, 7.3921, 7.3920, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3921, 7.3921, 7.3921, 7.3920, 7.3923, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3920, 7.3920, 7.3919, 7.3920, 7.3921, 7.3920, 7.3919, 7.3920,
        7.3923, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3921, 7.3919, 7.3919, 7.3921, 7.3921, 7.3920, 7.3921, 7.3919, 7.3921,
        7.3922, 7.3921, 7.3918, 7.3922, 7.3922, 7.3918, 7.3919, 7.3918, 7.3918,
        7.3921, 7.3918, 7.3918, 7.3922, 7.3922, 7.3919, 7.3921, 7.3922, 7.3922,
        7.3920, 7.3922, 7.3919, 7.3923, 7.3920, 7.3920, 7.3919, 7.3919, 7.3920,
        7.3921, 7.3920, 7.3920, 7.3918, 7.3921, 7.3920, 7.3920, 7.3919, 7.3918,
        7.3921, 7.3919, 7.3921, 7.3919, 7.3919, 7.3921, 7.3921, 7.3919, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.445068359375
tensor([ 27,   0, 779,   0, 315,   0, 123,   0,  27,   0, 779,   0,  27,   0,
        779,   0, 779], dtype=torch.int32)
tensor([ 27, 779, 315, 123,  27, 779,  27, 779, 779], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3921, 7.3920, 7.3920, 7.3923, 7.3921, 7.3920, 7.3921, 7.3920, 7.3920,
        7.3921, 7.3921, 7.3921, 7.3922, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3918, 7.3922, 7.3919, 7.3922, 7.3922, 7.3922, 7.3919, 7.3922,
        7.3919, 7.3921, 7.3921, 7.3916, 7.3919, 7.3921, 7.3919, 7.3921, 7.3919,
        7.3917, 7.3922, 7.3920, 7.3920, 7.3920, 7.3917, 7.3917, 7.3917, 7.3917,
        7.3922, 7.3921, 7.3922, 7.3921, 7.3920, 7.3921, 7.3920, 7.3922, 7.3921,
        7.3914, 7.3921, 7.3914, 7.3922, 7.3922, 7.3922, 7.3919, 7.3914, 7.3914,
        7.3918, 7.3916, 7.3916, 7.3916, 7.3918, 7.3918, 7.3918, 7.3918, 7.3916,
        7.3919, 7.3923, 7.3923, 7.3919, 7.3923, 7.3919, 7.3919, 7.3920, 7.3919,
        7.3922, 7.3921, 7.3923, 7.3922, 7.3922, 7.3923, 7.3923, 7.3919, 7.3922,
        7.3919, 7.3920, 7.3922, 7.3919, 7.3922, 7.3922, 7.3919, 7.3921, 7.3922,
        7.3923, 7.3922, 7.3922, 7.3923, 7.3923, 7.3922, 7.3922, 7.3923, 7.3923,
        7.3920, 7.3921, 7.3921, 7.3922, 7.3920, 7.3921, 7.3918, 7.3920, 7.3921,
        7.3918, 7.3922, 7.3922, 7.3923, 7.3918, 7.3918, 7.3922, 7.3922, 7.3918,
        7.3919, 7.3921, 7.3921, 7.3920, 7.3920, 7.3920, 7.3920, 7.3921, 7.3920,
        7.3918, 7.3918, 7.3918, 7.3918, 7.3917, 7.3918, 7.3918, 7.3918, 7.3918],
       grad_fn=<NegBackward0>)
loss: 1064.448974609375
tensor([376,   0, 381,   0, 376,   0, 381,   0, 376,   0, 381,   0, 431,   0,
        870,   0, 381], dtype=torch.int32)
tensor([376, 381, 376, 381, 376, 381, 431, 870, 381], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3917, 7.3921, 7.3917, 7.3921, 7.3917, 7.3921, 7.3922, 7.3923, 7.3921,
        7.3919, 7.3918, 7.3921, 7.3919, 7.3921, 7.3921, 7.3918, 7.3918, 7.3918,
        7.3917, 7.3920, 7.3920, 7.3920, 7.3921, 7.3916, 7.3921, 7.3921, 7.3920,
        7.3917, 7.3921, 7.3917, 7.3921, 7.3918, 7.3921, 7.3917, 7.3920, 7.3917,
        7.3920, 7.3922, 7.3920, 7.3919, 7.3920, 7.3919, 7.3921, 7.3921, 7.3918,
        7.3922, 7.3921, 7.3922, 7.3921, 7.3921, 7.3921, 7.3922, 7.3918, 7.3921,
        7.3921, 7.3920, 7.3921, 7.3920, 7.3921, 7.3921, 7.3921, 7.3920, 7.3920,
        7.3921, 7.3921, 7.3917, 7.3920, 7.3917, 7.3923, 7.3921, 7.3917, 7.3917,
        7.3919, 7.3921, 7.3920, 7.3921, 7.3918, 7.3920, 7.3921, 7.3920, 7.3920,
        7.3919, 7.3921, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3922, 7.3922, 7.3921, 7.3922, 7.3921, 7.3923, 7.3918, 7.3921, 7.3922,
        7.3915, 7.3917, 7.3917, 7.3917, 7.3919, 7.3915, 7.3921, 7.3915, 7.3915,
        7.3922, 7.3917, 7.3921, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3921, 7.3919, 7.3921, 7.3922, 7.3920, 7.3921, 7.3919, 7.3919, 7.3919,
        7.3922, 7.3920, 7.3920, 7.3922, 7.3919, 7.3919, 7.3919, 7.3920, 7.3920,
        7.3922, 7.3922, 7.3920, 7.3919, 7.3919, 7.3919, 7.3921, 7.3922, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.446533203125
tensor([910,   0, 309,   0, 820,   0, 820,   0, 309,   0, 309,   0,  15,   0,
        820,   0, 309], dtype=torch.int32)
tensor([910, 309, 820, 820, 309, 309,  15, 820, 309], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3919, 7.3921, 7.3916, 7.3916, 7.3921, 7.3921, 7.3919, 7.3916, 7.3921,
        7.3919, 7.3920, 7.3919, 7.3922, 7.3922, 7.3920, 7.3920, 7.3919, 7.3920,
        7.3920, 7.3921, 7.3916, 7.3920, 7.3916, 7.3919, 7.3920, 7.3916, 7.3920,
        7.3922, 7.3921, 7.3921, 7.3920, 7.3922, 7.3921, 7.3921, 7.3922, 7.3922,
        7.3922, 7.3922, 7.3917, 7.3922, 7.3920, 7.3920, 7.3914, 7.3920, 7.3919,
        7.3919, 7.3917, 7.3917, 7.3919, 7.3917, 7.3919, 7.3921, 7.3920, 7.3917,
        7.3915, 7.3919, 7.3920, 7.3915, 7.3915, 7.3919, 7.3919, 7.3919, 7.3915,
        7.3922, 7.3919, 7.3919, 7.3919, 7.3922, 7.3916, 7.3922, 7.3919, 7.3919,
        7.3922, 7.3922, 7.3913, 7.3922, 7.3917, 7.3913, 7.3913, 7.3921, 7.3913,
        7.3918, 7.3918, 7.3922, 7.3921, 7.3922, 7.3918, 7.3922, 7.3922, 7.3922,
        7.3923, 7.3920, 7.3922, 7.3920, 7.3919, 7.3922, 7.3922, 7.3920, 7.3920,
        7.3921, 7.3921, 7.3922, 7.3921, 7.3919, 7.3923, 7.3922, 7.3922, 7.3921,
        7.3919, 7.3917, 7.3918, 7.3915, 7.3921, 7.3921, 7.3920, 7.3921, 7.3921,
        7.3913, 7.3922, 7.3919, 7.3919, 7.3922, 7.3922, 7.3922, 7.3919, 7.3919,
        7.3922, 7.3916, 7.3919, 7.3921, 7.3922, 7.3922, 7.3919, 7.3919, 7.3922,
        7.3918, 7.3918, 7.3921, 7.3920, 7.3921, 7.3918, 7.3921, 7.3921, 7.3921],
       grad_fn=<NegBackward0>)
loss: 1064.442626953125
tensor([375,   0, 874,   0, 230,   0, 375,   0, 658,   0, 874,   0, 375,   0,
        874,   0, 375], dtype=torch.int32)
tensor([375, 874, 230, 375, 658, 874, 375, 874, 375], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3919, 7.3919, 7.3919, 7.3919, 7.3921, 7.3919, 7.3919, 7.3919, 7.3919,
        7.3919, 7.3921, 7.3919, 7.3919, 7.3917, 7.3919, 7.3921, 7.3921, 7.3919,
        7.3919, 7.3921, 7.3922, 7.3920, 7.3920, 7.3920, 7.3919, 7.3919, 7.3920,
        7.3920, 7.3920, 7.3920, 7.3922, 7.3920, 7.3920, 7.3918, 7.3920, 7.3920,
        7.3923, 7.3922, 7.3920, 7.3919, 7.3919, 7.3923, 7.3923, 7.3919, 7.3919,
        7.3921, 7.3921, 7.3915, 7.3921, 7.3915, 7.3921, 7.3915, 7.3920, 7.3915,
        7.3920, 7.3920, 7.3922, 7.3923, 7.3920, 7.3922, 7.3922, 7.3922, 7.3922,
        7.3921, 7.3923, 7.3921, 7.3920, 7.3922, 7.3920, 7.3920, 7.3921, 7.3921,
        7.3922, 7.3920, 7.3920, 7.3922, 7.3917, 7.3922, 7.3916, 7.3920, 7.3922,
        7.3922, 7.3922, 7.3920, 7.3919, 7.3920, 7.3920, 7.3922, 7.3922, 7.3922,
        7.3922, 7.3917, 7.3922, 7.3922, 7.3918, 7.3918, 7.3918, 7.3915, 7.3922,
        7.3923, 7.3921, 7.3923, 7.3922, 7.3923, 7.3921, 7.3921, 7.3923, 7.3921,
        7.3921, 7.3918, 7.3918, 7.3922, 7.3918, 7.3920, 7.3920, 7.3920, 7.3918,
        7.3922, 7.3915, 7.3918, 7.3920, 7.3920, 7.3920, 7.3922, 7.3922, 7.3920,
        7.3920, 7.3922, 7.3922, 7.3920, 7.3922, 7.3920, 7.3922, 7.3920, 7.3920,
        7.3918, 7.3918, 7.3920, 7.3923, 7.3921, 7.3919, 7.3920, 7.3921, 7.3916],
       grad_fn=<NegBackward0>)
loss: 1064.4498291015625
tensor([691,   0, 671,   0, 772,   0, 671,   0, 373,   0, 671,   0, 373,   0,
        373,   0, 671], dtype=torch.int32)
tensor([691, 671, 772, 671, 373, 671, 373, 373, 671], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3919, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3922, 7.3920, 7.3920, 7.3922, 7.3923, 7.3920, 7.3923, 7.3923, 7.3920,
        7.3920, 7.3921, 7.3920, 7.3922, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920,
        7.3922, 7.3921, 7.3921, 7.3922, 7.3922, 7.3913, 7.3919, 7.3921, 7.3922,
        7.3918, 7.3922, 7.3918, 7.3918, 7.3922, 7.3918, 7.3922, 7.3922, 7.3918,
        7.3921, 7.3921, 7.3921, 7.3921, 7.3918, 7.3921, 7.3918, 7.3921, 7.3921,
        7.3922, 7.3919, 7.3924, 7.3922, 7.3922, 7.3919, 7.3922, 7.3919, 7.3922,
        7.3920, 7.3920, 7.3919, 7.3917, 7.3919, 7.3920, 7.3919, 7.3919, 7.3919,
        7.3920, 7.3919, 7.3918, 7.3920, 7.3918, 7.3914, 7.3920, 7.3918, 7.3920,
        7.3920, 7.3922, 7.3922, 7.3922, 7.3918, 7.3920, 7.3918, 7.3920, 7.3922,
        7.3918, 7.3918, 7.3918, 7.3919, 7.3922, 7.3921, 7.3922, 7.3922, 7.3922,
        7.3921, 7.3922, 7.3922, 7.3921, 7.3922, 7.3921, 7.3921, 7.3922, 7.3921,
        7.3921, 7.3921, 7.3919, 7.3919, 7.3919, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3920, 7.3920, 7.3922, 7.3920, 7.3922, 7.3922, 7.3919, 7.3920, 7.3922,
        7.3921, 7.3921, 7.3922, 7.3922, 7.3920, 7.3920, 7.3921, 7.3920, 7.3920,
        7.3922, 7.3918, 7.3922, 7.3917, 7.3917, 7.3920, 7.3917, 7.3922, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.4521484375
tensor([196,   0, 245,   0, 468,   0, 196,   0, 245,   0, 196,   0, 245,   0,
        245,   0, 196], dtype=torch.int32)
tensor([196, 245, 468, 196, 245, 196, 245, 245, 196], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3923, 7.3918, 7.3922, 7.3923, 7.3918, 7.3923, 7.3918, 7.3918, 7.3923,
        7.3922, 7.3922, 7.3922, 7.3921, 7.3920, 7.3920, 7.3922, 7.3920, 7.3922,
        7.3923, 7.3919, 7.3921, 7.3923, 7.3923, 7.3919, 7.3919, 7.3923, 7.3923,
        7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3920, 7.3915, 7.3920,
        7.3922, 7.3922, 7.3922, 7.3919, 7.3921, 7.3919, 7.3919, 7.3920, 7.3922,
        7.3923, 7.3920, 7.3920, 7.3923, 7.3920, 7.3920, 7.3917, 7.3923, 7.3923,
        7.3920, 7.3920, 7.3921, 7.3921, 7.3920, 7.3920, 7.3920, 7.3921, 7.3921,
        7.3920, 7.3920, 7.3920, 7.3922, 7.3922, 7.3921, 7.3912, 7.3922, 7.3920,
        7.3921, 7.3918, 7.3919, 7.3921, 7.3921, 7.3919, 7.3919, 7.3919, 7.3919,
        7.3917, 7.3919, 7.3919, 7.3921, 7.3921, 7.3921, 7.3919, 7.3921, 7.3921,
        7.3921, 7.3921, 7.3921, 7.3916, 7.3921, 7.3921, 7.3923, 7.3921, 7.3921,
        7.3919, 7.3922, 7.3920, 7.3922, 7.3919, 7.3923, 7.3919, 7.3922, 7.3919,
        7.3921, 7.3921, 7.3921, 7.3919, 7.3921, 7.3921, 7.3921, 7.3921, 7.3921,
        7.3919, 7.3920, 7.3919, 7.3921, 7.3912, 7.3920, 7.3921, 7.3919, 7.3921,
        7.3921, 7.3921, 7.3921, 7.3917, 7.3920, 7.3921, 7.3917, 7.3917, 7.3917,
        7.3922, 7.3919, 7.3921, 7.3922, 7.3918, 7.3918, 7.3922, 7.3918, 7.3922],
       grad_fn=<NegBackward0>)
loss: 1064.451904296875
tensor([921,   0, 260,   0, 365,   0, 379,   0, 921,   0, 379,   0, 921,   0,
        379,   0, 921], dtype=torch.int32)
tensor([921, 260, 365, 379, 921, 379, 921, 379, 921], dtype=torch.int32)
input 1: torch.Size([144, 1623]), input 2: torch.Size([144, 1623])
losses_all: tensor([7.3919, 7.3922, 7.3923, 7.3920, 7.3919, 7.3920, 7.3919, 7.3920, 7.3919,
        7.3921, 7.3921, 7.3919, 7.3920, 7.3920, 7.3921, 7.3921, 7.3920, 7.3920,
        7.3922, 7.3917, 7.3922, 7.3922, 7.3918, 7.3918, 7.3922, 7.3918, 7.3918,
        7.3923, 7.3923, 7.3923, 7.3917, 7.3923, 7.3923, 7.3923, 7.3916, 7.3923,
        7.3920, 7.3920, 7.3921, 7.3920, 7.3920, 7.3920, 7.3916, 7.3920, 7.3920,
        7.3921, 7.3919, 7.3921, 7.3921, 7.3919, 7.3915, 7.3919, 7.3921, 7.3919,
        7.3918, 7.3921, 7.3918, 7.3921, 7.3921, 7.3917, 7.3916, 7.3918, 7.3921,
        7.3919, 7.3921, 7.3919, 7.3920, 7.3921, 7.3919, 7.3919, 7.3921, 7.3921,
        7.3922, 7.3920, 7.3920, 7.3920, 7.3922, 7.3919, 7.3922, 7.3920, 7.3920,
        7.3916, 7.3919, 7.3916, 7.3919, 7.3916, 7.3912, 7.3920, 7.3919, 7.3916,
        7.3920, 7.3918, 7.3918, 7.3919, 7.3920, 7.3920, 7.3918, 7.3920, 7.3920,
        7.3921, 7.3920, 7.3921, 7.3920, 7.3920, 7.3921, 7.3919, 7.3921, 7.3920,
        7.3917, 7.3917, 7.3921, 7.3921, 7.3921, 7.3921, 7.3917, 7.3917, 7.3921,
        7.3922, 7.3921, 7.3921, 7.3920, 7.3920, 7.3920, 7.3920, 7.3921, 7.3921,
        7.3921, 7.3920, 7.3922, 7.3922, 7.3920, 7.3922, 7.3920, 7.3919, 7.3920,
        7.3923, 7.3919, 7.3919, 7.3923, 7.3920, 7.3922, 7.3923, 7.3919, 7.3919],
       grad_fn=<NegBackward0>)
loss: 1064.446533203125
Traceback (most recent call last):
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/./experiment_resnet.py", line 71, in <module>
    experiment_base(dataset)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/./experiment_resnet.py", line 61, in experiment_base
    trainer.train()
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/train_resnet.py", line 95, in train
    preds = self.model(torch.permute(examples, (0, 1, 4, 2, 3)))
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet_with_projection.py", line 41, in forward
    return torch.stack([self.sequence_pass(x[i]) for i in range(batch_size)])
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet_with_projection.py", line 41, in <listcomp>
    return torch.stack([self.sequence_pass(x[i]) for i in range(batch_size)])
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet_with_projection.py", line 33, in sequence_pass
    x = super(ProjectionResNet, self).forward(x)
  File "/Users/starfarmer2/Desktop/Jasper/Coding Files/CSPlus/ICL-Experiments/models/resnet.py", line 66, in forward
    z = self.layer4(z)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torchvision/models/resnet.py", line 93, in forward
    out = self.bn1(out)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/modules/batchnorm.py", line 168, in forward
    return F.batch_norm(
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/torch/nn/functional.py", line 2438, in batch_norm
    return torch.batch_norm(
KeyboardInterrupt